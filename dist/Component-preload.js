//@ui5-bundle hds/ui5/todolistadvance/Component-preload.js
sap.ui.predefine("hds/ui5/todolistadvance/Component", ["sap/ui/core/UIComponent","hds/ui5/todolistadvance/model/models"],(e,t)=>{"use strict";return e.extend("hds.ui5.todolistadvance.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
sap.ui.predefine("hds/ui5/todolistadvance/controller/App.controller", ["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("hds.ui5.todolistadvance.controller.App",{onInit(){}})});
sap.ui.predefine("hds/ui5/todolistadvance/controller/Main.controller", ["sap/ui/core/mvc/Controller","sap/ui/core/Fragment","sap/m/MessageToast","hds/ui5/todolistadvance/util/formatter"],(e,t,i,s)=>{"use strict";return e.extend("hds.ui5.todolistadvance.controller.View1",{onInit(){},formatter:s,onTaskSubmit(){this.addTaskDialogBoxHandler()},inputTaskLiveChange(e){const t=this.getView().byId("idInputTaskDescription");const i=this.getView().byId("idDatePickerInputTask");const s=this.getView().byId("idPriorityInputTask");const a=this.getView().byId("idCategoryInputTask");const o=e.getParameter("id");const n=e.getParameter("selectedItem")?.getId();if(o?.includes("idInputTaskDescription")){const i=e.getParameter("value")?.trim()?.length>0;const s=t.getValueState()==="Error";if(s&&i)t.setValueState("None")}if(o?.includes("idDatePickerInputTask")){const t=e.getParameter("value")?.length>0;const s=i.getValueState()==="Error";if(s&&t)i.setValueState("None")}if(n?.includes("idPriorityInputTask")){const t=e.getParameter("selectedItem").getKey();const i=s.getValueState()==="Error";if(i&&t)s.setValueState("None")}if(n?.includes("idCategoryInputTask")){const t=e.getParameter("selectedItem").getKey();const i=a.getValueState()==="Error";if(i&&t)a.setValueState("None")}},openAddTaskDialog({isEditMode:e=false}={}){this.getView().getModel().setProperty("/isEditMode",e);if(!this.pDialog){this.pDialog=this.loadFragment({name:"hds.ui5.todolistadvance.view.fragment.TaskDetailsDialog"})}this.pDialog.then(e=>e.open())},addTaskDialogBoxHandler(){const e=this.getView().byId("idInputTaskDescription").getValue();const t=this.getView().byId("idDatePickerInputTask").getValue();const s=this.getView().byId("idPriorityInputTask").getSelectedItem().getText();const a=this.getView().byId("idCategoryInputTask").getSelectedItem().getText();const o=this.getView().getModel().getProperty("/isEditMode");function n(e){const t=o?e.idCurrentSelectedTask:(new Date).getTime().toString();return t}const r={id:n(this),title:e,priority:s,dueDate:t,category:a,Status:"Pending"};const d=this.validateTaskInputDetails();if(d){i.show("Please provide missing details",{width:"250px"});return}const l=this.getView().getModel();const g=l.getProperty("/tasks")||[];if(o){const e=g.map(e=>e.id===this.idCurrentSelectedTask?r:e);l.setProperty("/tasks",[...e])}else{l.setProperty("/tasks",[...g,r])}this.resetInputTasksFields();this.byId("idDialogMain").close()},validateTaskInputDetails(){const e=this.getView().byId("idInputTaskDescription");const t=this.getView().byId("idDatePickerInputTask");const i=this.getView().byId("idPriorityInputTask");const s=this.getView().byId("idCategoryInputTask");const a=e.getValue().trim();const o=t.getValue();const n=i.getSelectedKey();const r=s.getSelectedKey();let d=false;if(!a){d=true;e.setValueState("Error")}if(!o){d=true;t.setValueState("Error")}if(!n){d=true;i.setValueState("Error")}if(!r){d=true;s.setValueState("Error")}return d},resetInputTasksFields(){const e=this.getView().byId("idInputTaskDescription");const t=this.getView().byId("idDatePickerInputTask");const i=this.getView().byId("idPriorityInputTask");const s=this.getView().byId("idCategoryInputTask");e.setValue("");e.setValueState("None");e.setValueStateText(null);t.setValue(null);t.setValueState("None");i.setSelectedKey("");i.setValueState("None");s.setSelectedKey("");s.setValueState("None")},cancelTaskDialogBoxHandler(){this.resetInputTasksFields();this.byId("idDialogMain").close()},getConfirmationDeleteTask(){if(!this.deleteTaskDialog){this.deleteTaskDialog=this.loadFragment({name:"hds.ui5.todolistadvance.view.fragment.TaskDeleteConfirmation"})}this.deleteTaskDialog.then(e=>e.open())},closeDialogDeleteTask(){this.byId("idDialogDeleteTaskConfirmation").close()},proceedTaskDelete(){const e=this.getView().getModel();const t=e.getProperty("/tasks")||[];const i=t.filter(e=>e.id!==this.idSelectedTaskForDeletion);e.setProperty("/tasks",i);this.closeDialogDeleteTask()},deleteTaskHandler(e){const{id:t}=e.getSource().getBindingContext().getObject();this.idSelectedTaskForDeletion=t;this.getConfirmationDeleteTask()},editTaskHandler(e){this.openAddTaskDialog({isEditMode:true});this.populateTaskDetailsInDialogBox(e)},populateTaskDetailsInDialogBox(e){const{id:t,title:i,priority:s,dueDate:a,category:o}=e.getSource().getBindingContext().getObject();this.idCurrentSelectedTask=t;this.getView().byId("idDatePickerInputTask").setDateValue(new Date(a));this.getView().byId("idInputTaskDescription").setValue(i);this.getView().byId("idPriorityInputTask").setSelectedKey(s.toUpperCase());this.getView().byId("idCategoryInputTask").setSelectedKey(o.toUpperCase())},markCompleteteTaskHandler(e){const{id:t}=e.getSource().getBindingContext().getObject();const i=this.getView().getModel();const s=i.getProperty("/tasks")||[];const a=s.map(e=>e.id===t?{...e,Status:"Completed"}:e);i.setProperty("/tasks",a)}})});
sap.ui.predefine("hds/ui5/todolistadvance/model/models", ["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
sap.ui.predefine("hds/ui5/todolistadvance/util/formatter", [],function(){"use strict";return{getDialogTitle:function(e){const t=this.getOwnerComponent().getModel("i18n").getResourceBundle();switch(e){case true:return t.getText("TaskDialogTitleEditMode");case false:return t.getText("TaskDialogTitle");default:return t.getText("TaskDialogTitleEditMode")}}}});
sap.ui.require.preload({
	"hds/ui5/todolistadvance/i18n/i18n.properties":'# This is the resource bundle for hds.ui5.todolistadvance\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Todo List Advance\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitleMainView=Todo List Advance\n\n#Fragment - Task Details\nTaskDialogTitle=Enter new task details\nTaskDialogTitleEditMode=Update task details',
	"hds/ui5/todolistadvance/manifest.json":'{"_version":"1.76.0","sap.app":{"id":"hds.ui5.todolistadvance","type":"application","i18n":{"bundleUrl":"i18n/i18n.properties","supportedLocales":[""]},"applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.6","toolsId":"efa7babe-f701-4afb-9392-c34d599d5f8d"}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.140.0","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"":{"type":"sap.ui.model.json.JSONModel","uri":"model/mockData/tasks.json"},"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"hds.ui5.todolistadvance.i18n.i18n","supportedLocales":[""]}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"hds.ui5.todolistadvance.view","async":true,"viewPath":"hds.ui5.todolistadvance.view"},"routes":[{"name":"mainViewRoute","pattern":"","target":["MainViewTarget"]}],"targets":{"MainViewTarget":{"id":"idMainViewTarget","name":"Main","controlAggregation":"pages"}}},"rootView":{"viewName":"hds.ui5.todolistadvance.view.App","type":"XML","id":"App","async":true}}}',
	"hds/ui5/todolistadvance/view/App.view.xml":'<mvc:View controllerName="hds.ui5.todolistadvance.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><VBox id="rootVbox" class="centeredPage"><App id="app" /></VBox></mvc:View>',
	"hds/ui5/todolistadvance/view/Main.view.xml":'<mvc:View controllerName="hds.ui5.todolistadvance.controller.Main"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns="sap.m"><Page id="page" title="{i18n>titleMainView}"><content><HBox id="inputHbox"><Button press="openAddTaskDialog" icon="sap-icon://add" id="idBtnOpenTaskDialog" text="Add Task!" type="Default" width="200px" class="sapUi-Std-PaddingL"></Button></HBox><List\n                    id="taskList_pending"\n                    includeItemInSelection="true"\n                    mode="None"\n                    visible="{= ${/tasks}.length > 0 }"\n                    items="{\n                        path : \'/tasks\',\n                        sorter : {\n                            path : \'Status\',\n                            descending:true,\n                            group : true\n                        }\n                    }"><CustomListItem id="customListItem"><HBox id="hbox_custLstItm" justifyContent="SpaceBetween" alignItems="Center"><Text id="idTaskTitle" text="{title}" class="sapUiSmallMarginBegin"/><HBox id="alighment" justifyContent="End" alignItems="Center"><Text id="idDueDate" text="{dueDate}" class="hoverActions sapUiSmallMarginEnd"/><Text id="idCategory" text="{category}" class="hoverActions sapUiSmallMarginEnd"/><Text id="idPriority" text="{priority}" class="hoverActions sapUiSmallMarginEnd"/><HBox id="taskActions" class="hoverActions"><Button id="btnDelete" press="deleteTaskHandler" text="" icon="sap-icon://delete" class=" sapUiSmallMarginTopBottom"/><Button id="btnEdit" enabled="{= ${Status} !== \'Completed\' }" press="editTaskHandler" text="" icon="sap-icon://edit" class="sapUiSmallMarginBegin sapUiSmallMarginTopBottom"/><Button enabled="{= ${Status} !== \'Completed\' }" id="btnComplete" press="markCompleteteTaskHandler" text="" icon="sap-icon://complete" class="sapUiSmallMarginBegin sapUiSmallMarginTopBottom sapUiSmallMarginEnd" /></HBox></HBox></HBox></CustomListItem></List><List id="taskList_completed"><items><StandardListItem id="todolistItemCompleted" title="{title}"/></items></List></content><footer><Toolbar id="toolbarFooter"><Text\n                    id="footertext"\n                    text="Developed @ Hikmah Dev Studio by Shahabuddin Ansari" /></Toolbar></footer></Page></mvc:View>',
	"hds/ui5/todolistadvance/view/fragment/TaskDeleteConfirmation.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"><Dialog id="idDialogDeleteTaskConfirmation" type="Message" icon="sap-icon://alert" title="Warning"><content><Text id="idTaskDeleteMsg" text="Are you sure to delete this task ?"/></content><beginButton><Button id="idBtnDeleteTaskConfirm" press="proceedTaskDelete" type="Reject" text="Delete"/></beginButton><endButton><Button id="idBtnDeleteTaskCancel" press="closeDialogDeleteTask" type="Emphasized" text="Cancel" /></endButton></Dialog></core:FragmentDefinition>',
	"hds/ui5/todolistadvance/view/fragment/TaskDetailsDialog.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"><Dialog id="idDialogMain" title="{path: \'/isEditMode\', formatter: \'.formatter.getDialogTitle\'}"><content><VBox id="idInputVbox" width="100%" class="dialogContent"><Input submit="onTaskSubmit" id="idInputTaskDescription" liveChange="inputTaskLiveChange" placeholder="Task description" required="true"/></VBox><HBox id="idDatePickerHbox" justifyContent="Start" alignItems="Center" class="sapUiSmallMarginTop"><Label id="idLabelTaskDatePicker" text="Due date" class="sapUiTinyMargin" width="70px"/><DatePicker id="idDatePickerInputTask" width="150px" change="inputTaskLiveChange"/></HBox><HBox id="idHboxTaskPriority"><Label id="idTaskPriorityLabel" text="Priority" width="70px" class="sapUiTinyMargin"/><Select id="idPriorityInputTask" items="{/priority}" width="150px" change="inputTaskLiveChange"><items><core:Item id="idSelectItemsPriority" text="{title}" key="{id}"/></items></Select></HBox><HBox id="idHboxTaskCategory"><Label id="idTaskCategoryLabel" text="Category" width="70px" class="sapUiTinyMargin"/><Select id="idCategoryInputTask" items="{/category}" width="150px" change="inputTaskLiveChange"><items><core:Item id="idSelectItemsCategory" text="{title}" key="{id}"/></items></Select></HBox></content><buttons><Button id="idClearDialogBox" press="cancelTaskDialogBoxHandler" text="Cancel" type="Reject"></Button><Button id="idBtnAddTaskDialogBox" press="addTaskDialogBoxHandler" text="{= ${/isEditMode} ? \'Update\' : \'Add\'}" type="Accept"></Button></buttons></Dialog></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
